import{_ as s,c as a,a as e,o as t}from"./app-1qAUKaRo.js";const i={};function p(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation"><span>Documentation</span></a></h1><p>Lightweight package shortens given number to a short representation of it. For example <strong>1234</strong> will be formatted to <strong>1k</strong> and <strong>20244023</strong> to <strong>20m</strong>. Package supports multiple languages, the default it&#39;s set to English.</p><h2 id="🐘-supported-php-versions" tabindex="-1"><a class="header-anchor" href="#🐘-supported-php-versions"><span>🐘 Supported PHP versions</span></a></h2><ul><li>✅ 7.2</li><li>✅ 7.3</li><li>✅ 7.4</li><li>✅ 8.0</li><li>✅ 8.1</li><li>✅ 8.2</li><li>✅ 8.3</li></ul><h2 id="⚙️-language-configurations" tabindex="-1"><a class="header-anchor" href="#⚙️-language-configurations"><span>⚙️ Language configurations</span></a></h2><h3 id="change-language" tabindex="-1"><a class="header-anchor" href="#change-language"><span>Change language</span></a></h3><p>For changing the language you want to call <code>set()</code> method once before calling other methods from this package.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token class-name class-name-fully-qualified static-context">Serhii<span class="token punctuation">\\</span>ShortNumber<span class="token punctuation">\\</span>Lang</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ru&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="overwrite-translations" tabindex="-1"><a class="header-anchor" href="#overwrite-translations"><span>Overwrite translations</span></a></h3><p>If you want to replace existing translations for supported language or add your own language, you can pass custom translations as the second argument to <code>set()</code> method.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token comment">// Overwriting all fields</span></span>
<span class="line"><span class="token class-name class-name-fully-qualified static-context">Serhii<span class="token punctuation">\\</span>ShortNumber<span class="token punctuation">\\</span>Lang</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;en&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;thousand&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;thou&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;million&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mil&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;billion&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bil&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;trillion&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;tril&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can overwrite any fields that you need, overwriting all fields is not necessary.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token comment">// Overwriting 1 field</span></span>
<span class="line"><span class="token class-name class-name-fully-qualified static-context">Serhii<span class="token punctuation">\\</span>ShortNumber<span class="token punctuation">\\</span>Lang</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;en&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;million&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mil&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🚩-supported-languages" tabindex="-1"><a class="header-anchor" href="#🚩-supported-languages"><span>🚩 Supported languages</span></a></h2><table><thead><tr><th>Flag</th><th>Language</th><th>Code (ISO 639-1)</th><th>Thousand</th><th>Million</th><th>Billion</th><th>Trillion</th></tr></thead><tbody><tr><td>🇬🇧</td><td>English</td><td>en</td><td>1k</td><td>1m</td><td>1b</td><td>1t</td></tr><tr><td>🇷🇺</td><td>Russian</td><td>ru</td><td>1тыс</td><td>1млн</td><td>1млд</td><td>1трн</td></tr><tr><td>🇺🇦</td><td>Ukrainian</td><td>uk</td><td>1тис</td><td>1млн</td><td>1млд</td><td>1трн</td></tr></tbody></table><h2 id="👏-usage" tabindex="-1"><a class="header-anchor" href="#👏-usage"><span>👏 Usage</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">Serhii<span class="token punctuation">\\</span>ShortNumber<span class="token punctuation">\\</span>Number</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name static-context">Number</span><span class="token operator">::</span><span class="token function">conv</span><span class="token punctuation">(</span><span class="token number">1893234</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns: 1m</span></span>
<span class="line"><span class="token class-name static-context">Number</span><span class="token operator">::</span><span class="token function">conv</span><span class="token punctuation">(</span><span class="token number">20234</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns: 20m</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎁-contribute-language-support" tabindex="-1"><a class="header-anchor" href="#🎁-contribute-language-support"><span>🎁 Contribute language support</span></a></h2><p>Here is the <a href="https://github.com/short-number/short-number/commit/fdafe3e61c4b1e5bfe16594b76d5a95b4c4aee4c" target="_blank" rel="noopener noreferrer">commit</a> that added support for Ukrainian language. Contribute another language is very simple. You need to make 3 steps:</p><h3 id="step-1-translations" tabindex="-1"><a class="header-anchor" href="#step-1-translations"><span>Step 1. Translations</span></a></h3><p>Add translations to <code>resources/translations.php</code> file. Here is the file:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">return</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token comment">// English</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;en&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;thousand&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;k&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;million&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;m&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;billion&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;trillion&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;t&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Russian</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;ru&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;thousand&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;тыс&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;million&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;млн&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;billion&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;млд&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;trillion&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;трн&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// add same for your language</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-2-tests" tabindex="-1"><a class="header-anchor" href="#step-2-tests"><span>Step 2. Tests</span></a></h3><p>After adding another language, you need to add line to <code>tests/TranslationsTest.php</code>. The method <code>runTestsForSuffixes(string $lang, string[] $suffixes)</code> will generate tests for you. You just need to run <code>./vendor/bin/phpunit</code> to make sure your translation works.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">TranslationsTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">testing_correct_conversion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">runTestsForSuffixes</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;en&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;k&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;m&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;t&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">runTestsForSuffixes</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ru&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;тыс&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;млн&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;млд&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;трн&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// add same line for your language here</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-3-readme-md" tabindex="-1"><a class="header-anchor" href="#step-3-readme-md"><span>Step 3. README.md</span></a></h3><p>Last step you need to add new language to README.md file under the section <strong>Supported languages</strong>.</p><h2 id="🚀-quick-start" tabindex="-1"><a class="header-anchor" href="#🚀-quick-start"><span>🚀 Quick start</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> require serhii/short-number</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,29)]))}const c=s(i,[["render",p],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/","title":"Docs","lang":"en-US","frontmatter":{"title":"Docs"},"headers":[{"level":2,"title":"🐘 Supported PHP versions","slug":"🐘-supported-php-versions","link":"#🐘-supported-php-versions","children":[]},{"level":2,"title":"⚙️ Language configurations","slug":"⚙️-language-configurations","link":"#⚙️-language-configurations","children":[{"level":3,"title":"Change language","slug":"change-language","link":"#change-language","children":[]},{"level":3,"title":"Overwrite translations","slug":"overwrite-translations","link":"#overwrite-translations","children":[]}]},{"level":2,"title":"🚩 Supported languages","slug":"🚩-supported-languages","link":"#🚩-supported-languages","children":[]},{"level":2,"title":"👏 Usage","slug":"👏-usage","link":"#👏-usage","children":[]},{"level":2,"title":"🎁 Contribute language support","slug":"🎁-contribute-language-support","link":"#🎁-contribute-language-support","children":[{"level":3,"title":"Step 1. Translations","slug":"step-1-translations","link":"#step-1-translations","children":[]},{"level":3,"title":"Step 2. Tests","slug":"step-2-tests","link":"#step-2-tests","children":[]},{"level":3,"title":"Step 3. README.md","slug":"step-3-readme-md","link":"#step-3-readme-md","children":[]}]},{"level":2,"title":"🚀 Quick start","slug":"🚀-quick-start","link":"#🚀-quick-start","children":[]}],"git":{"updatedTime":1730459158000,"contributors":[{"name":"SerhiiCho","email":"serhiicho@protonmail.com","commits":5}]},"filePathRelative":"README.md"}');export{c as comp,r as data};
